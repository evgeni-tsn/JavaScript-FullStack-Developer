/**
 * Created by evgeni.tsn on 11/13/2016.
 */
let expect = require('chai').expect

function createList () {
  let data = []
  return {
    add: function (item) {
      data.push(item)
    },
    shiftLeft: function () {
      if (data.length > 1) {
        let first = data.shift()
        data.push(first)
      }
    },
    shiftRight: function () {
      if (data.length > 1) {
        let last = data.pop()
        data.unshift(last)
      }
    },
    swap: function (index1, index2) {
      if (!Number.isInteger(index1) || index1 < 0 ||
        index1 >= data.length || !Number.isInteger(index2) || index2 < 0 ||
        index2 >= data.length || index1 === index2
      ) {
        return false
      }
      let temp = data[index1]
      data[index1] = data[index2]
      data[index2] = temp
      return true
    },
    toString: function () {
      return data.join(', ')
    }
  }
}

describe('Unit Tests for AddDeleteList', function () {
  let list
  beforeEach(function () {
    list = createList()
  })

  it('Warn', () => {
    list.shiftLeft()
    list.add([])
    list.add({})
    list.add(undefined)
    list.add('')
    list.add(new Map)
    list.add(5)
    list.add(-2)
    list.add('45')
    list.add('Ivan')
    list.add('Ivan')
    list.swap('d', 2)
    list.swap('d', 2.2)
    list.swap('d', -2.2)
    list.swap('d', -22)
    list.swap('d', 22)
    list.swap('2', 2.2)
    list.swap('2', 2.2)
    list.swap(-1, 2)
    list.swap(-1.2, 2.2)
    list.swap(-100, 22)
    list.swap(100, 22.2)
    list.swap(100, -2.2)
    list.swap(233, 2)
    list.swap()
    list.swap('', {})
    list.swap({}, '')
    list.swap('', 2)
    list.swap('', -2)
    list.swap('', 222)
    list.swap('', '22')
    list.swap('', 'ifas2')
    list.swap('', '', '', '')
    list.swap({}, [])
    list.swap([], {})
    list.swap([], [])
    list.swap('pedal', 'pedal', 'pedal', 'pedal')
    list.swap(undefined, undefined)
    list.swap(undefined, 2)
    list.swap(undefined, -2)
    list.swap(undefined, 233)
    list.swap(undefined, 'pedal')
    list.swap('pedal', 'pedal')
    list.swap(undefined)
    list.swap(2)
    list.swap(-2)
    list.swap(233)
    list.swap(0)
    list.swap('dsada')
    list.swap(233.2, 2)
    list.swap(2, 'ds')
    list.swap(2, '-2.23')
    list.swap(2, '2.23')
    list.swap(2, -2)
    list.swap(2, 500)
    list.swap(2.3, 500.2)
    list.swap(2.3, 500)
    list.swap(2, 500.2)
    list.swap('dsa', -2)
    list.swap('dsa', -2.2)
    list.swap('dsa', 233)
    list.swap('dsa', 233.2)
    list.swap('dsa', 'dsa')
    list.swap(-44, 'd')
    list.swap(-44.3, 'd')
    list.swap(-44.3, '3')
    list.swap(-44, -1)
    list.swap(-44, -1.3)
    list.swap(-44, 1.3)
    list.swap(-44, 233)
    list.swap(344, 'sdds')
    list.swap(344, 233)
    list.swap(344, -234)
    list.swap(344, 344)
    list.swap(3, 3)
    list.swap(3, 3)
    list.swap(3.2, 3.2)
    list.swap('5', '5')
    list.shiftLeft()
    list.shiftRight()
    list.add('Ivan')
    list.add('Kolev')
    list.add(14)
    list.swap(0, 1)
    list.swap(0, -2)
    list.swap(-1, 2)
    list.shiftRight()

    list.add(5)
    list.swap(0, 3)

    list.add(5)
    list.add(-2)
    list.add('45')
    list.shiftLeft()
    list.swap('d', 2)
    list.swap('d', 2.2)
    list.swap('2', 2.2)
    list.swap(-1, 2)
    list.swap(-1.2, 2.2)
    list.swap(233, 2)
    list.swap(233.2, 2)
    list.swap(2, 'ds')
    list.swap(2, '-2.23')
    list.swap(2, '2.23')
    list.swap(2, -2)
    list.swap(2, 500)
    list.swap(2.3, 500.2)
    list.swap(2.3, 500)
    list.swap(2, 500.2)
    list.swap('dsa', -2)
    list.swap('dsa', -2.2)
    list.swap('dsa', 233)
    list.swap('dsa', 233.2)
    list.swap('dsa', 'dsa')
    list.shiftLeft()
    list.swap(-44, 'd')
    list.swap(-44.3, 'd')
    list.swap(-44.3, '3')
    list.swap(-44, -1)
    list.swap(-44, -1.3)
    list.swap(-44, 1.3)
    list.swap(-44, 233)
    list.swap(344, 'sdds')
    list.swap(344, 233)
    list.swap(344, -234)
    list.swap(344, 344)
    list.swap(3, 3)
    list.swap(3, 3)
    list.swap(3.2, 3.2)
    list.swap('5', '5')
    list.swap('dsa', 'dsa')
    list.swap(-2, -3)

    list.swap(0.2, 1.23)
    list.swap(1, -1.23)
    list.swap('test', 2)
    list.swap(1, 'buga')
    list.swap(new Function(), 'embaga')
    list.swap(1, 5)
    list.shiftRight()
    list.swap(5, 0)
    list.swap({}, 0)
    list.swap({}, {})
    list.swap(344, -234)
    list.swap(344, 344)
    list.swap(3, 3)
    list.swap(-3.2, -3.2)
    list.swap('5', '5')
    list.swap(5, {})
    list.swap(-5, {})
    list.swap({}, -5)
    list.swap({}, 2.2)
    list.swap({}, -2.1)
    list.swap(-3, {})
    list.swap(233, {})
    list.swap('dasdsa', {})
    list.swap('d', new Date())
    list.swap('4', new Date())
    list.swap(3.1, new Date())
    list.swap(-3.1, new Date())
    list.swap(0, new Date())
    list.swap(-1, new Date())
    list.swap(33, new Date())
    list.swap(new Date(), 2)
    list.swap(new Date(), -2)
    list.swap(new Date(), 222)
    list.swap(new Date(), 'dsd')
    list.swap(new Date(), -2.3)
    list.swap(new Date(), 2.3)
    list.swap(2, 0)

    list.swap({}, 'dasdsa')
    list.swap({ first: 'bnz' }, 233)

    list.shiftLeft()
    list.shiftRight()
    list.add('Ivan')
    list.add([])
    list.add({})
    list.add(undefined)
    list.add()
    list.add(new Map)
    list.add('Kolev')
    list.add(14)
    list.swap(0, 1)
    list.swap(0, -2)
    list.swap(-1, 2)
    list.shiftRight()

    list.add(5)
    list.swap(0, 3)

    list.add(5)
    list.add(-2)
    list.add('45')
    list.shiftLeft()
    list.swap('d', 2)
    list.swap('d', 2.2)
    list.swap('2', 2.2)
    list.swap({}, '')
    list.swap('', 2)
    list.swap('', -2)
    list.swap('', 222)
    list.swap('', '22')
    list.swap('', 'ifas2')
    list.swap('', '', '', '')
    list.swap({}, [])
    list.swap(233, 2)
    list.swap()
    list.swap('', {})
    list.swap({}, '')
    list.swap('', '')
    list.swap('', '', '', '')
    list.swap({}, [])
    list.swap([], {})
    list.swap([], [])
    list.swap(-1, 2)
    list.swap(-1.2, 2.2)
    list.swap(233, 2)
    list.swap(233.2, 2)
    list.swap(2, 'ds')
    list.swap(2, '-2.23')
    list.swap(2, '2.23')
    list.swap()
    list.swap(undefined, undefined)
    list.swap(undefined, 2)
    list.swap(undefined, -2)
    list.swap(undefined, 233)
    list.swap(undefined, 'pedal')
    list.swap('pedal', 'pedal')
    list.swap(undefined)
    list.swap(2)
    list.swap(-2)
    list.swap(233)
    list.swap(0)
    list.swap('dsada')
    list.swap(233.2, 2)
    list.swap(2, -2)
    list.swap(2, 500)
    list.swap(2.3, 500.2)
    list.swap(2.3, 500)
    list.swap(2, 500.2)
    list.swap('dsa', -2)
    list.swap('dsa', -2.2)
    list.swap('dsa', 233)
    list.swap('dsa', 233.2)
    list.swap('dsa', 'dsa')
    list.shiftLeft()
    list.swap(-44, 'd')
    list.swap(-44.3, 'd')
    list.swap(-3.2, -3.2)
    list.swap('5', '5')
    list.swap(5, {})
    list.swap(-5, {})
    list.swap({}, -5)
    list.swap({}, 2.2)
    list.swap({}, -2.1)
    list.swap(-3, {})
    list.swap(233, {})
    list.swap('dasdsa', {})
    list.swap('d', new Date())
    list.swap('4', new Date())
    list.swap(3.1, new Date())
    list.swap(-3.1, new Date())
    list.swap(0, new Date())
    list.swap(-1, new Date())
    list.swap(33, new Date())
    list.swap(new Date(), 2)
    list.swap(new Date(), -2)
    list.swap(new Date(), 222)
    list.swap(new Date(), 'dsd')
    list.swap(new Date(), -2.3)
    list.swap(new Date(), 2.3)
    list.swap(2, 0)

    list.swap({}, 'dasdsa')
    list.swap({ first: 'bnz' }, 233)
    list.swap(-44.3, '3')
    list.swap(-44, -1)
    list.swap(-44, -1.3)
    list.swap(-44, 1.3)
    list.swap(-44, 233)
    list.swap(344, 'sdds')
    list.swap(344, 233)
    list.swap(344, -234)
    list.swap(344, 344)
    list.swap(3, 3)
    list.swap(3, 3)
    list.swap(3.2, 3.2)
    list.swap('5', '5')
    list.swap('dsa', 'dsa')
    list.swap(-2, -3)

    list.swap(0.2, 1.23)
    list.swap(1, -1.23)
    list.swap('test', 2)
    list.swap(1, 'buga')
    list.swap(new Function(), 'embaga')
    list.swap(1, 5)
    list.shiftRight()
    list.swap(5, 0)
    list.swap({}, 0)
    list.swap({}, {})
    list.swap(344, -234)
    list.swap(344, 344)
    list.swap(3, 3)
    list.swap(-3.2, -3.2)
    list.swap('5', '5')
    list.swap(5, {})
    list.swap(-5, {})
    list.swap({}, -5)
    list.swap({}, 2.2)
    list.swap({}, -2.1)
    list.swap(-3, {})
    list.swap(233, {})
    list.swap('dasdsa', {})
    list.swap('dasdsa', new Date())
    list.swap(0, new Date())
    list.swap(-1, new Date())
    list.swap(33, new Date())
    list.swap(new Date(), 2)
    list.swap(new Date(), -2)
    list.swap(new Date(), 222)
    list.swap(new Date(), 'dsd')
    list.swap(new Date(), -2.3)
    list.swap(new Date(), 2.3)
    list.swap(2, 0)

    list.swap({}, 'dasdsa')
    list.swap({ first: 'bnz' }, 233)

    list.shiftLeft()
    expect(list.toString()).to.be.equal(', [object Object], -2, [object Map], , 14, 45, Ivan, Ivan, Ivan, Kolev, 5, 5, -2, 45, , Ivan, , [object Object], , , [object Map], Kolev, 5, 5, -2, 45, 5, 14')
    expect(typeof list.add).to.be.equal('function')
    expect(typeof list.shiftLeft).to.be.equal('function')
    expect(typeof list.shiftRight).to.be.equal('function')
    expect(typeof list.swap).to.be.equal('function')
    expect(typeof list.toString).to.be.equal('function')
  })

  it('typeof', () => {
    expect(typeof list.add).to.be.equal('function')
    expect(typeof list.shiftLeft).to.be.equal('function')
    expect(typeof list.shiftRight).to.be.equal('function')
    expect(typeof list.swap).to.be.equal('function')
    expect(typeof list.toString).to.be.equal('function')
  })

  it('q', () => {
    list.add(3)
    list.add(33)
    list.add(22)
    list.add(44)
    list.swap(1.2, 2.1)
    expect(list.toString()).to.be.equal('3, 33, 22, 44')
  })

  it('w', () => {
    list.add(3)
    list.add(33)
    list.add(22)
    list.add(44)
    list.swap(1.2, 2)
    expect(list.toString()).to.be.equal('3, 33, 22, 44')
  })

  it('d', () => {
    list.add(3)
    list.add(33)
    list.add(22)
    list.add(44)
    list.swap('1.2', 2)
    expect(list.toString()).to.be.equal('3, 33, 22, 44')
  })

  it('a', () => {
    list.add(3)
    list.add(33)
    list.add(22)
    list.add(44)
    list.swap('1.2', '2')
    expect(list.toString()).to.be.equal('3, 33, 22, 44')
  })
})